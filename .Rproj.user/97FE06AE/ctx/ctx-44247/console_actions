{
    "type": [
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, binwidth = 1, method = \"dotdensity\", binwidth = NULL)",
        "Error in geom_dotplot(dotsize = 0.7, binwidth = 1, method = \"dotdensity\",  : \n  formal argument \"binwidth\" matched by multiple actual arguments\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = 1)",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "MLB2021hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2021hittingstats.csv\")",
        "> ",
        "MLB2016hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2016hittingstats.csv\")",
        "> ",
        "MLB2021pitchingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/pitchingstats.csv\")",
        "> ",
        "View(MLB2016hittingstats)",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE)",
        "> ",
        "MLB2021hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2021hittingstats.csv\")",
        "> ",
        "MLB2016hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2016hittingstats.csv\")",
        "> ",
        "MLB2021pitchingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/pitchingstats.csv\")",
        "> ",
        "#Cleaned the hitting data by changing column names and removing unnecessary columns",
        "> ",
        "#2021:",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_ab\"] = \"AB\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_total_pa\"] = \"PA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_home_run\"] = \"HR\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_strikeout\"] = \"SO\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_walk\"] = \"BB\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"slg_percent\"] = \"SLG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"on_base_percent\"] = \"OBP\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xba\"] = \"xBA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xslg\"] = \"xSLG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"woba\"] = \"wOBA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xobp\"] = \"xOBP\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"exit_velocity_avg\"] = \"AvgEV\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"launch_angle_avg\"] = \"AvgLA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"hard_hit_percent\"] = \"HardHit.Percent\"",
        "> ",
        "MLB2021hittingstats = subset(MLB2021hittingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#2016:",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_ab\"] = \"AB\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_total_pa\"] = \"PA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_home_run\"] = \"HR\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_strikeout\"] = \"SO\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_walk\"] = \"BB\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"slg_percent\"] = \"SLG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"on_base_percent\"] = \"OBP\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xba\"] = \"xBA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xslg\"] = \"xSLG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"woba\"] = \"wOBA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xobp\"] = \"xOBP\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"exit_velocity_avg\"] = \"AvgEV\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"launch_angle_avg\"] = \"AvgLA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"hard_hit_percent\"] = \"HardHit.Percent\"",
        "> ",
        "MLB2016hittingstats = subset(MLB2016hittingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#Add a categorical variable to sort players into age groups",
        "> ",
        "MLB2021hittingstats$AgeGroup = cut(MLB2021hittingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "MLB2016hittingstats$AgeGroup = cut(MLB2016hittingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "",
        "> ",
        "#Cleaned the pitching data by changing column names and removing unnecessary columns",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_game\"] = \"G\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_formatted_ip\"] = \"IP\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_win\"] = \"W\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_loss\"] = \"L\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_era\"] = \"ERA\"",
        "> ",
        "MLB2021pitchingstats = subset(MLB2021pitchingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#Add a categorical variable to sort players into age groups",
        "> ",
        "MLB2021pitchingstats$AgeGroup = cut(MLB2021pitchingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = OPS, fill = AgeGroup)) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  ggtitle(\"Boxplots of OPS by Age Group\") +",
        "+ ",
        "  xlab(\"Age Group\")",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_point(data = MLB2016hittingstats)",
        "> ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`+.gg`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Cannot add ggproto objects together. Did you forget to add this object to a ggplot object?\nBacktrace:\n\u001B[90m 1. \u001B[39mggplot2:::`+.gg`(...)\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "ggplot(MLB2016hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE)",
        "> ",
        "MLB2021hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2021hittingstats.csv\")",
        "> ",
        "MLB2016hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2016hittingstats.csv\")",
        "> ",
        "MLB2021pitchingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/pitchingstats.csv\")",
        "> ",
        "#Cleaned the hitting data by changing column names and removing unnecessary columns",
        "> ",
        "#2021:",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_ab\"] = \"AB\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_total_pa\"] = \"PA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_home_run\"] = \"HR\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_strikeout\"] = \"SO\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_walk\"] = \"BB\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"slg_percent\"] = \"SLG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"on_base_percent\"] = \"OBP\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xba\"] = \"xBA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xslg\"] = \"xSLG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"woba\"] = \"wOBA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xobp\"] = \"xOBP\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"exit_velocity_avg\"] = \"AvgEV\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"launch_angle_avg\"] = \"AvgLA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"hard_hit_percent\"] = \"HardHit.Percent\"",
        "> ",
        "MLB2021hittingstats = subset(MLB2021hittingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#2016:",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_ab\"] = \"AB\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_total_pa\"] = \"PA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_home_run\"] = \"HR\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_strikeout\"] = \"SO\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_walk\"] = \"BB\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"slg_percent\"] = \"SLG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"on_base_percent\"] = \"OBP\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xba\"] = \"xBA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xslg\"] = \"xSLG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"woba\"] = \"wOBA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xobp\"] = \"xOBP\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"exit_velocity_avg\"] = \"AvgEV\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"launch_angle_avg\"] = \"AvgLA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"hard_hit_percent\"] = \"HardHit.Percent\"",
        "> ",
        "MLB2016hittingstats = subset(MLB2016hittingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#Add a categorical variable to sort players into age groups",
        "> ",
        "MLB2021hittingstats$AgeGroup = cut(MLB2021hittingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "MLB2016hittingstats$AgeGroup = cut(MLB2016hittingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "",
        "> ",
        "#Cleaned the pitching data by changing column names and removing unnecessary columns",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_game\"] = \"G\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_formatted_ip\"] = \"IP\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_win\"] = \"W\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_loss\"] = \"L\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_era\"] = \"ERA\"",
        "> ",
        "MLB2021pitchingstats = subset(MLB2021pitchingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#Add a categorical variable to sort players into age groups",
        "> ",
        "MLB2021pitchingstats$AgeGroup = cut(MLB2021pitchingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "ggplot(MLB2016hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2016: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = OPS, fill = AgeGroup)) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  ggtitle(\"Boxplots of OPS by Age Group\") +",
        "+ ",
        "  xlab(\"Age Group\")",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "knitr::opts_chunk$set(echo = FALSE)",
        "> ",
        "MLB2021hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2021hittingstats.csv\")",
        "> ",
        "MLB2016hittingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2016hittingstats.csv\")",
        "> ",
        "MLB2021pitchingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2021pitchingstats.csv\")",
        "> ",
        "MLB2016pitchingstats = read.csv(\"/Users/samstoller/Documents/Data/Final/SamStoller_website/2016pitchingstats.csv\")",
        "> ",
        "#Cleaned the hitting data by changing column names and removing unnecessary columns",
        "> ",
        "#2021:",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_ab\"] = \"AB\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_total_pa\"] = \"PA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_home_run\"] = \"HR\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_strikeout\"] = \"SO\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_walk\"] = \"BB\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"b_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"slg_percent\"] = \"SLG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"on_base_percent\"] = \"OBP\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xba\"] = \"xBA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xslg\"] = \"xSLG\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"woba\"] = \"wOBA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"xobp\"] = \"xOBP\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"exit_velocity_avg\"] = \"AvgEV\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"launch_angle_avg\"] = \"AvgLA\"",
        "> ",
        "names(MLB2021hittingstats)[names(MLB2021hittingstats) == \"hard_hit_percent\"] = \"HardHit.Percent\"",
        "> ",
        "MLB2021hittingstats = subset(MLB2021hittingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#2016:",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_ab\"] = \"AB\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_total_pa\"] = \"PA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_home_run\"] = \"HR\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_strikeout\"] = \"SO\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_walk\"] = \"BB\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"b_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"slg_percent\"] = \"SLG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"on_base_percent\"] = \"OBP\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xba\"] = \"xBA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xslg\"] = \"xSLG\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"woba\"] = \"wOBA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"xobp\"] = \"xOBP\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"exit_velocity_avg\"] = \"AvgEV\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"launch_angle_avg\"] = \"AvgLA\"",
        "> ",
        "names(MLB2016hittingstats)[names(MLB2016hittingstats) == \"hard_hit_percent\"] = \"HardHit.Percent\"",
        "> ",
        "MLB2016hittingstats = subset(MLB2016hittingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#Add a categorical variable to sort players into age groups",
        "> ",
        "MLB2021hittingstats$AgeGroup = cut(MLB2021hittingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "MLB2016hittingstats$AgeGroup = cut(MLB2016hittingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "",
        "> ",
        "#Cleaned the pitching data by changing column names and removing unnecessary columns",
        "> ",
        "#2021:",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_game\"] = \"G\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_formatted_ip\"] = \"IP\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_win\"] = \"W\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_loss\"] = \"L\"",
        "> ",
        "names(MLB2021pitchingstats)[names(MLB2021pitchingstats) == \"p_era\"] = \"ERA\"",
        "> ",
        "MLB2021pitchingstats = subset(MLB2021pitchingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#2016:",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"first_name\"] = \"First\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"last_name\"] = \"Last\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"player_age\"] = \"Age\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"p_game\"] = \"G\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"p_formatted_ip\"] = \"IP\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"p_k_percent\"] = \"K.Percent\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"p_bb_percent\"] = \"BB.Percent\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"batting_avg\"] = \"AVG\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"on_base_plus_slg\"] = \"OPS\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"p_win\"] = \"W\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"p_loss\"] = \"L\"",
        "> ",
        "names(MLB2016pitchingstats)[names(MLB2016pitchingstats) == \"p_era\"] = \"ERA\"",
        "> ",
        "MLB2016pitchingstats = subset(MLB2016pitchingstats, select = -c(player_id, year, X))",
        "> ",
        "",
        "> ",
        "#Add a categorical variable to sort players into age groups",
        "> ",
        "MLB2021pitchingstats$AgeGroup = cut(MLB2021pitchingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "MLB2016pitchingstats$AgeGroup = cut(MLB2016pitchingstats$Age, breaks = c(0, 26, 31, 42), labels = c(\"young\", \"middle\", \"old\"))",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "ggplot(MLB2016hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2016: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = OPS, fill = AgeGroup)) +",
        "+ ",
        "  geom_boxplot() +",
        "+ ",
        "  coord_flip() +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  ggtitle(\"Boxplots of OPS by Age Group\") +",
        "+ ",
        "  xlab(\"Age Group\")",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "View(MLB2016pitchingstats)",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(NULL, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(data = MLB2016hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_point(data = MLB2021hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(NULL, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(data = MLB2016hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_point(data = MLB2021hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_text(data = MLB2021hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(NULL, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(data = MLB2016hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_point(data = MLB2021hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_text(data = MLB2021hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  geom_text(data = MLB2016hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(NULL, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(data = MLB2016hittingstats, alpha = 0.6, aes(color = c(\"black\", \"violet\", \"orange\"))) +",
        "+ ",
        "  geom_point(data = MLB2021hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_text(data = MLB2021hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  geom_text(data = MLB2016hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`check_aesthetics()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Aesthetics must be either length 1 or the same as the data (307): colour\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mbase\u001B[22m `<fn>`(x)\n\u001B[90m 2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m 4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m 5. \u001B[39mggplot2 by_layer(function(l, d) l$compute_aesthetics(d, plot))\n\u001B[90m 6. \u001B[39mggplot2 f(l = layers[[i]], d = data[[i]])\n\u001B[90m 7. \u001B[39ml$compute_aesthetics(d, plot)\n\u001B[90m 8. \u001B[39mggplot2 f(..., self = self)\n\u001B[90m 9. \u001B[39mggplot2:::check_aesthetics(evaled, n)\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(NULL, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(data = MLB2016hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_point(data = MLB2021hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_text(data = MLB2021hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  geom_text(data = MLB2016hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(NULL, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(data = MLB2016hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_point(data = MLB2021hittingstats, alpha = 0.6) +",
        "+ ",
        "  geom_text(data = MLB2021hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  geom_text(data = MLB2016hittingstats, aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "",
        "> ",
        "ggplot(MLB2016hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2016: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "library(ggplot2)",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2021: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "",
        "> ",
        "ggplot(MLB2016hittingstats, aes(x = OPS, y = AVG, color = AgeGroup)) +",
        "+ ",
        "  geom_point(alpha = 0.6) +",
        "+ ",
        "  geom_text(aes(label = Last), hjust = .5, vjust = -.7, size = 2) +",
        "+ ",
        "  ggtitle(\"2016: OPS vs Batting Average with Age Group as color\") +",
        "+ ",
        "  labs(color = \"Age Group\")",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, y = ..total.., fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "Error in FUN(X[[i]], ...) : object 'total' not found\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7, method = \"dotdensity\", binwidth = NULL)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`check_required_aesthetics()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m geom_dotplot requires the following missing aesthetics: y\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mbase\u001B[22m `<fn>`(x)\n\u001B[90m 2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m 4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m 5. \u001B[39mggplot2 by_layer(function(l, d) l$compute_geom_1(d))\n\u001B[90m 6. \u001B[39mggplot2 f(l = layers[[i]], d = data[[i]])\n\u001B[90m 7. \u001B[39ml$compute_geom_1(d)\n\u001B[90m 8. \u001B[39mggplot2 f(..., self = self)\n\u001B[90m 9. \u001B[39mggplot2:::check_required_aesthetics(...)\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR)) +",
        "+ ",
        "  geom_dotplot(dotsize = .7)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`check_required_aesthetics()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m geom_dotplot requires the following missing aesthetics: y\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mbase\u001B[22m `<fn>`(x)\n\u001B[90m 2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m 4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m 5. \u001B[39mggplot2 by_layer(function(l, d) l$compute_geom_1(d))\n\u001B[90m 6. \u001B[39mggplot2 f(l = layers[[i]], d = data[[i]])\n\u001B[90m 7. \u001B[39ml$compute_geom_1(d)\n\u001B[90m 8. \u001B[39mggplot2 f(..., self = self)\n\u001B[90m 9. \u001B[39mggplot2:::check_required_aesthetics(...)\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR)) +",
        "+ ",
        "  geom_dotplot()",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`check_required_aesthetics()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m geom_dotplot requires the following missing aesthetics: y\nBacktrace:\n\u001B[90m 1. \u001B[39m\u001B[1mbase\u001B[22m `<fn>`(x)\n\u001B[90m 2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m 4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m 5. \u001B[39mggplot2 by_layer(function(l, d) l$compute_geom_1(d))\n\u001B[90m 6. \u001B[39mggplot2 f(l = layers[[i]], d = data[[i]])\n\u001B[90m 7. \u001B[39ml$compute_geom_1(d)\n\u001B[90m 8. \u001B[39mggplot2 f(..., self = self)\n\u001B[90m 9. \u001B[39mggplot2:::check_required_aesthetics(...)\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\")",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", fill = c(\"violet\"))",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", fill = c(\"violet\", \"orange\", \"blue\"))",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`check_aesthetics()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Aesthetics must be either length 1 or the same as the data (311): fill\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m `<fn>`(x)\n\u001B[90m  2. \u001B[39mggplot2:::print.ggplot(x)\n\u001B[90m  4. \u001B[39mggplot2:::ggplot_build.ggplot(x)\n\u001B[90m  5. \u001B[39mggplot2 by_layer(function(l, d) l$compute_geom_2(d))\n\u001B[90m  6. \u001B[39mggplot2 f(l = layers[[i]], d = data[[i]])\n\u001B[90m  7. \u001B[39ml$compute_geom_2(d)\n\u001B[90m  8. \u001B[39mggplot2 f(..., self = self)\n\u001B[90m  9. \u001B[39mself$geom$use_defaults(data, self$aes_params, modifiers)\n\u001B[90m 10. \u001B[39mggplot2 f(..., self = self)\n\u001B[90m 11. \u001B[39mggplot2:::check_aesthetics(params[aes_params], nrow(data))\n",
        "> ",
        "",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\") +",
        "Error: Incomplete expression: ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +\n  geom_dotplot(binaxis = \"y\", stackdir = \"center\") +\n",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\")",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\") +",
        "+ ",
        "  scale_fill_discrete()",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\") +",
        "+ ",
        "  guides(fill = \"none\")",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\") +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  geom_violin(scale = \"width\", alpha = .5)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", dotsize = 0.5) +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  geom_violin(scale = \"width\", alpha = .5)",
        "Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`.\n",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", dotsize = 0.5, binwidth = 1) +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  geom_violin(scale = \"width\", alpha = .5)",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", dotsize = 0.7, binwidth = 1) +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  geom_violin(scale = \"width\", alpha = .5)",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", dotsize = 0.8, binwidth = 1) +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  geom_violin(scale = \"width\", alpha = .5)",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", binwidth = 1) +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  geom_violin(scale = \"width\", alpha = .5)",
        "> ",
        "ggplot(MLB2021hittingstats, aes(x = AgeGroup, y = HR, fill = AgeGroup)) +",
        "+ ",
        "  geom_dotplot(binaxis = \"y\", stackdir = \"center\", dotsize = .8, binwidth = 1) +",
        "+ ",
        "  guides(fill = \"none\") +",
        "+ ",
        "  geom_violin(scale = \"width\", alpha = .5)",
        "> ",
        "library(ggradar)",
        "Error in library(ggradar) : there is no package called ‘ggradar’\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(ggradar)",
        "Error in library(ggradar) : there is no package called ‘ggradar’\n",
        "> ",
        "devtools::install_github(\"ricardo-bion/ggradar\", ",
        "+ ",
        "                          dependencies = TRUE)",
        "Error in loadNamespace(x) : there is no package called ‘devtools’\n",
        "> ",
        "install_github(\"ricardo-bion/ggradar\", ",
        "+ ",
        "                          dependencies = TRUE)",
        "Error in install_github(\"ricardo-bion/ggradar\", dependencies = TRUE) : \n  could not find function \"install_github\"\n",
        "> ",
        "install.packages(\"devtools\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "devtools::install_github(\"ricardo-bion/ggradar\", ",
        "+ ",
        "                          dependencies = TRUE)",
        "Error in loadNamespace(x) : there is no package called ‘devtools’\n",
        "\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"devtools\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"devtools\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "devtools::install_github(\"ricardo-bion/ggradar\", ",
        "+ ",
        "                          dependencies = TRUE)",
        "Error in loadNamespace(x) : there is no package called ‘devtools’\n",
        "\nRestarting R session...\n\n"
    ]
}